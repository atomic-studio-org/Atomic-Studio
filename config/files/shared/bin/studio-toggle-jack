#!/usr/bin/env -S nu
CURRENT_IMAGE=(rpm-ostree status -b --json | jq -r '.deployments[0]."container-image-reference"')

def user_prompt [yes: bool] {
  let user_response = input "[Y/n]> "
  return (($user_response =~ "(?i)yes") or ($user_response =~ "(?i)y"))
}

if ($CURRENT_IMAGE | grep -q "/var/ublue-os/image") {
    echo "Before we can switch to the Jack image,the current system needs an update. Do you wish to update?"
    
    if (not (user_prompt $yes)) {
      exit 0
    }

    ujust update
    exit 0
}

mut CURRENT_STATE = "disabled"
if ($CURRENT_IMAGE | grep -q "jack") {
    CURRENT_STATE="enabled"
}

echo "Jack-only mode is currently ${CURRENT_STATE}"
echo "Enable or Disable jack-only mode"
let OPTION = (gum choose Enable Disable)

if "$OPTION" == "Enable" {
    if "$CURRENT_STATE" == "enabled" {
        echo "You are already on a jack image"
    } else {
        echo "Rebasing to a pipewire image"
        let base_image_name = ($CURRENT_IMAGE | sed 's|^ostree-image-signed:docker://ghcr.io/.*/||')
        rpm-ostree rebase $"ostree-image-signed:docker://($base_image_name)-jack:latest"
    }
} else if "$OPTION" == "Disable" {
    if "$CURRENT_STATE" == "enabled" {
        echo "Rebasing to a pipewire image"
        rpm-ostree rebase ($CURRENT_IMAGE | sed "s/\-jack//")
    } else {
        echo "You are currently not on a pipewire image"
    }
}
